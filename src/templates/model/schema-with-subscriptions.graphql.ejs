type <%= Name %> {
  _id: ID!
  name: String!
<% if (relations && relations.length > 0) { %>
  # Relations
<% relations.forEach(function(relation) { %>
  <%= relation.graphqlField %>
<% }); %>
<% } %>
  createdAt: Date
  updatedAt: Date
}

<% if (withPagination) { %>
type <%= Name %>Connection {
  items: [<%= Name %>!]!
  pageInfo: PageInfo!
}

input <%= Name %>Filter {
  name: String
<% if (relations && relations.length > 0) { %>
  # Relation filters
<% relations.forEach(function(relation) { %>
  <%= relation.fieldName %>Id: ID
<% }); %>
<% } %>
}

<% } %>
input Create<%= Name %>Input {
  name: String!
<% if (relations && relations.length > 0) { %>
  # Relation IDs
<% relations.forEach(function(relation) { %>
  <%= relation.inputField %>
<% }); %>
<% } %>
}

input Update<%= Name %>Input {
  name: String
<% if (relations && relations.length > 0) { %>
  # Relation IDs
<% relations.forEach(function(relation) { %>
  <%= relation.inputField %>
<% }); %>
<% } %>
}

type Query {
<% if (withPagination) { %>
  <%= name %>s(page: Int, limit: Int, sort: String, filter: <%= Name %>Filter): <%= Name %>Connection!
<% } else { %>
  <%= name %>s: [<%= Name %>!]!
<% } %>
  <%= name %>(id: ID!): <%= Name %>
}

type Mutation {
  create<%= Name %>(input: Create<%= Name %>Input!): <%= Name %>
  update<%= Name %>(id: ID!, input: Update<%= Name %>Input!): <%= Name %>
  delete<%= Name %>(id: ID!): Boolean!
}

<% if (withSubscriptions) { %>
type Subscription {
  <%= name %>Created: <%= Name %>!
  <%= name %>Updated: <%= Name %>!
  <%= name %>Deleted: <%= Name %>!
}
<% } %>
